@model AccountDetailsModel

@{
    ViewData["Title"] = "Details";
}

<h2>Details</h2>

<div>
    <h4>Account</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Account.Name)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Account.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Account.Caption)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Account.Caption)
        </dd>
        <dt>
            Total credit
        </dt>
        <dd>
            @Model.Account.GetAmountString(Model.TotalCredit)
        </dd>
        <dt>
            Total debit
        </dt>
        <dd>
            @Model.Account.GetAmountString(Model.TotalDebit)
        </dd>
        <dt>
            Balance
        </dt>
        <dd>
            @Model.Account.GetAmountString(Model.TotalCredit - Model.TotalDebit)
        </dd>
    </dl>
</div>
<div>
    <table class="table table-responsive table-striped table-condensed">
        <thead>
            <tr>
                <th>Date</th>
                <th>Type</th>
                <th>Account</th>
                <th colspan="3" class="text-center">Amount</th>
            </tr>
            <tr>
                <th colspan="3"></th>
                <th class="small">Source</th>
                <th class="small">Target</th>
                <th class="small">Rate</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var trx in Model.AllTransactions)
            {
            <tr class="@trx.GetCssClass()">
                <td>@trx.Transaction.Date.ToString("d")</td>
                <td>@trx.Transaction.Type.ToString()</td>
                <td>
                    @if (trx.Direction == EDirection.To && trx.Transaction.Type != dal.models.ETransactionType.Airdrop)
                    {
                        <span><i class="glyphicon glyphicon-arrow-right red" style="margin-right:4px" title="To"></i></span>
                    }
                    else
                    {
                        <span><i class="glyphicon glyphicon-arrow-left green" style="margin-right:4px" title="From"></i></span>
                    }

                    @if (trx.OtherAccount != null)
                    {
                    <span>
                        <a asp-action="Details" asp-route-id="@trx.OtherAccount.ID">@trx.OtherAccount.Name</a>
                    </span>
                    }
                </td>
                @if (trx.Transaction.Type == dal.models.ETransactionType.BuySell)
                {
                    <td>
                        <span>@trx.Transaction.SourceAccount.GetAmountString(trx.Transaction.SourceAmount + trx.Transaction.SourceFees)</span>
                        @if (trx.Transaction.SourceFees > 0)
                        {
                            <br />
                            <span class="small">Source fees : @trx.Transaction.SourceFees @trx.Transaction.SourceAccount.Currency.GetCurrencySymbol()</span>
                        }
                    </td>
                    <td>
                        <span>@trx.Transaction.TargetAccount.GetAmountString(trx.Transaction.TargetAmount + trx.Transaction.TargetFees)</span>
                        @if (trx.Transaction.TargetFees > 0)
                        {
                            <br />
                            <span class="small">Target fees : @trx.Transaction.TargetFees @trx.Transaction.TargetAccount.Currency.GetCurrencySymbol()</span>
                        }
                    </td>
                    <td>
                        <span>@@ @trx.Transaction.SourceAccount.GetAmountString(trx.Transaction.SourceAmount / trx.Transaction.TargetAmount, includeCurrency: false) @trx.Transaction.SourceAccount.Currency.GetCurrencySymbol()/@trx.Transaction.TargetAccount?.Currency.GetCurrencySymbol()</span>
                    </td>
                }
                else
                {
                <td colspan="3">
                    <span>@trx.Transaction.SourceAccount.GetAmountString(trx.Transaction.SourceAmount)</span>
                    @if (trx.Transaction.SourceFees > 0)
                    {
                    <br/>
                    <span class="small">Source fees : @trx.Transaction.SourceFees @trx.Transaction.SourceAccount.Currency.GetCurrencySymbol()</span>
                    }
                    @if (trx.Transaction.TargetFees > 0)
                    {
                    <br />
                    <span class="small">Target fees : @trx.Transaction.TargetFees</span>
                    }
                </td>
                }
            </tr>
            }
        </tbody>
    </table>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Account.ID">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
